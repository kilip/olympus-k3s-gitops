---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: kube-prometheus-stack
  namespace: gotk-system
spec:
  interval: 1m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 9.4.10
      sourceRef:
        kind: HelmRepository
        name: kube-prometheus-stack
        namespace: gotk-system
      interval: 1m
  values:
    prometheusOperator:
      createCustomResource: true
      # prometheusConfigReloaderImage:
      #   repository: quay.io/coreos/prometheus-config-reloader
      #   tag: v0.39.0
      configmapReloadImage:
        repository: jimmidyson/configmap-reload
        tag: v0.3.0
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 1Gi
        tolerations:
        - key: "arm"
          operator: "Exists"
        #podMetadata:
        #  annotations:
        #    backup.velero.io/backup-volumes: alertmanager-kube-prometheus-stack-alertmanager-db
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
        hosts: [alert.itstoni.com]
        tls:
        - hosts:
          - alert.itstoni.com
        #annotations:
        #  nginx.ingress.kubernetes.io/auth-url: "https://auth.eviljungle.com/oauth2/auth"
        #  nginx.ingress.kubernetes.io/auth-signin: https://auth.eviljungle.com/oauth2/start
      config:
        route:
          # group_by: ['alertname', 'job']
          # group_wait: 30s
          # group_interval: 5m
          # repeat_interval: 6h
          receiver: 'slack-notifications'
          # receiver: 'pagerduty'
          routes:
            - match:
                alertname: Watchdog
              receiver: 'null'
            - receiver: 'pagerduty'
              match:
                severity: critical
              continue: true
            - receiver: 'slack-notifications'
        inhibit_rules:
        - source_match:
            severity: 'critical'
          target_match:
            severity: 'warning'
          # Apply inhibition if the alertname is the same.
          equal: ['alertname', 'namespace']
        templates: ["*.tmpl"]
      templateFiles:
        pagerduty-custom.tmpl: |-
          {{- define "pagerduty.custom.description" -}}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}{{- end -}}
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
